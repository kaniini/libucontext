cmake_minimum_required(VERSION 2.8.12)
project(libucontext)
if (CMAKE_ANDROID_ARCH)
	set(ARCH ${CMAKE_ANDROID_ARCH})
else()
	set(ARCH ${CMAKE_SYSTEM_PROCESSOR})
endif()
if (ARCH STREQUAL "arm64")
	set(ARCH "aarch64")
elseif(ARCH MATCHES "armv7l")
	set(ARCH "arm")
endif()
if (ARCH MATCHES "i686")
	set(ARCH "x86")
elseif(ARCH MATCHES "i386")
	set(ARCH "x86")
endif()
set(LIBUCONTEXT_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
list(APPEND LIBUCONTEXT_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/arch/${ARCH})
list(APPEND LIBUCONTEXT_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/arch/common)
message(STATUS "arch is ${ARCH}")
enable_language(ASM)
file(GLOB LIBUCONTEXT_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/arch/${ARCH}/*.c)
file(GLOB LIBUCONTEXT_ASM_FILES ${CMAKE_CURRENT_SOURCE_DIR}/arch/${ARCH}/*.S)
add_library(libucontext STATIC ${LIBUCONTEXT_SOURCE_FILES} ${LIBUCONTEXT_ASM_FILES})
if (FREESTANDING)
	target_compile_options(libucontext PUBLIC -DFREESTANDING)
	message(STATUS "build FREESTANDING...")
	file(COPY_FILE  ${CMAKE_CURRENT_SOURCE_DIR}/arch/${ARCH}/include/libucontext/bits.h ${CMAKE_CURRENT_SOURCE_DIR}/include/libucontext/bits.h)
else()
	file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/arch/common/include/libucontext/bits.h ${CMAKE_CURRENT_SOURCE_DIR}/include/libucontext/bits.h)
endif()
message(STATUS "include dir=${LIBUCONTEXT_INCLUDE_DIR}")
target_include_directories(libucontext PUBLIC ${LIBUCONTEXT_INCLUDE_DIR})
